---
apiVersion: 1.0.0
metadata:
  generateName: java-eap-thorntail-
projects:
  -
    name: rest-http-redhat
    source:
      type: git
      location: "https://github.com/thorntail-examples/rest-http-redhat"
components:
  -
    type: chePlugin
    id: redhat/java11/latest
  -
    # NOTE: instead of the old stack-analysis script, should be able to use the latest dependency-analysis plugin instead
    type: chePlugin
    id: redhat/dependency-analytics/latest
  -
    type: dockerimage
    alias: maven
    # NOTE: For Z and Power, likely need to switch at build time to an openj9-11 image, if it exists (CRW-758)
    # NOTE: can test pre-release image: registry-proxy.engineering.redhat.com/rh-osbs/jboss-eap-7-eap-xp1-openjdk11-openshift-rhel8:latest
    # NOTE: there's also a JDK8 version at registry.redhat.io/jboss-eap-7/eap73-openjdk8-openshift-rhel7:7.3.0 ...
    #       BUT the JDK8/RHEL7 image requires using "scl enable rh-maven35 'mvn -version'" to run maven, so devfile will need adjustment.
    # TODO: switch to registry.redhat.io/jboss-eap-7/eap-xp1-openjdk11-openshift-rhel8:1.0 when it's live
    image: registry.redhat.io/jboss-eap-7/eap73-openjdk11-openshift-rhel8:7.3.0
    env:
      - name: JAVA_OPTS
        value: "-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss"
      - name: MAVEN_OPTS
        value: $(JAVA_OPTS)
    memoryLimit: 768Mi
    endpoints:
      - name: 'eap'
        port: 8080
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
commands:
  -
    name: build
    actions:
      -
        type: exec
        component: maven
        command: "MAVEN_OPTS='-Xmx200m' && mvn clean install -DskipTests"
        workdir: ${CHE_PROJECTS_ROOT}/rest-http-redhat
  -
    name: run
    actions:
      -
        type: exec
        component: maven
        command: "MAVEN_OPTS='-Xmx200m' && mvn clean install -DskipTests && java -jar target/*.jar -Djava.net.preferIPv4Stack=true"
        workdir: ${CHE_PROJECTS_ROOT}/rest-http-redhat
  -
    name: debug
    actions:
      -
        type: exec
        component: maven
        command: "MAVEN_OPTS='-Xmx200m' && mvn clean install -DskipTests && java -agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n -jar target/*.jar -Djava.net.preferIPv4Stack=true"
        workdir: ${CHE_PROJECTS_ROOT}/rest-http-redhat
  -
    name: deploy to OpenShift
    actions:
      -
        type: exec
        component: maven
        command: "mvn fabric8:deploy -Popenshift -DskipTests"
        workdir: ${CHE_PROJECTS_ROOT}/rest-http-redhat
  -
    name: Debug (Attach)
    actions:
    - type: vscode-launch
      referenceContent: |
        {
        "version": "0.2.0",
        "configurations": [
        {
            "type": "java",
            "request": "attach",
            "name": "Debug (Attach)",
            "hostName": "localhost",
            "port": 5005
        }
        ]
        }
